class my-squid3::nocache ( 

$http_port                     = [],
$visible_hostname              = [],
$template                      = 'default',
$squid_user                    = 'squid',
$squid_group                   = 'squid',
$package_version               = 'installed',
#$package_name                  = $::my-squid3::params::package_name,
$service_ensure                = 'running',
#$service_enable                = $::my-squid3::params::service_enable,
#$service_name                  = $::my-squid3::params::service_name,

) inherits ::my-squid3::params {

include ::my-squid3::user

$use_template = $template ? {
'nocache' => 'my-squid3/nocache.erb',
'default' => 'my-squid3/default.erb',
default => $template,

}

 package { 'squid3_package':
    ensure => $package_version,
    name   => $package_name,
  }



service { 'squid3_service':
    ensure    => $service_ensure,
    enable    => $service_enable,
    name      => $service_name,
    restart   => "systemctl restart ${service_name}",
    #path      => [ '/sbin', '/usr/sbin', '/usr/local/etc/rc.d' ],
    hasstatus => true,
    require   => Package['squid3_package'],File
  }





file { $config_file:
    require      => Package['squid3_package'],
    notify       => Service['squid3_service'],
    content      => template($use_template),
    validate_cmd => "/usr/sbin/${service_name} -k parse -f %",
  }


file { $squid_conf:
            ensure  => directory,
            require => Package['squid3_package'],
            purge   => true,  # We made this directory, delete anything not managed by us
            recurse => true,  # For recursive cleaning
            force   => true,  # To ensure deletion of unmanaged folders too
            notify  => Service['squid3_service'];



}


}
